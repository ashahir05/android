name: Build
on:
  workflow_dispatch:
    inputs:
      manifest-url:
        required: true
        default: "https://github.com/PitchBlackRecoveryProject/manifest_pb.git"
      manifest-branch:
        required: true
        default: "android-12.1"
      vendor-name:
        required: true
        default: "samsung"
      device-name:
        required: true
        default: "a12s"
      product:
        required: true
        default: "twrp"
      build-type:
        required: true
        default: "eng"
      target:
        required: true
        default: "recoveryimage"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive

      - name: Free disk space
        uses: easimon/maximize-build-space@v8
        with:
          swap-size-mb: 12228
          remove-dotnet: true
          remove-android: true
          remove-haskell: true
          remove-codeql: true
          remove-docker-images: true
          
      - name: Prepare environment
        run: |
          sudo apt update -y
          sudo apt install -y linux-modules-extra-$(uname -r)
          
          sudo modprobe zram
          sudo zramctl /dev/zram0 --algorithm zstd --size 32G
          sudo mkswap /dev/zram0
          sudo swapon --priority 150 /dev/zram0

          sudo sysctl vm.swappiness=180
          sudo sysctl vm.watermark_boost_factor=0
          sudo sysctl vm.watermark_scale_factor=125
          sudo sysctl vm.page-cluster=0
          
          sudo apt install -y \
            gperf \
            gcc-multilib \
            gcc-10-multilib \ 
            g++-multilib \
            g++-10-multilib \
            libc6-dev \
            lib32ncurses5-dev \
            x11proto-core-dev \
            libx11-dev \
            tree \
            lib32z-dev \
            libgl1-mesa-dev \
            libxml2-utils \
            xsltproc \
            bc \
            openjdk-8-jdk \
            lib32readline-dev \
            lib32z1-dev \
            liblz4-tool \
            libncurses5-dev \
            libncurses5 \
            libtinfo5 \
            libsdl1.2-dev \
            libwxgtk3.0-gtk3-dev \
            libxml2 \
            lzop \
            pngcrush \
            schedtool \
            squashfs-tools \
            imagemagick \
            libbz2-dev \
            lzma \
            ncftp \
            qemu-user-static \
            libstdc++-10-dev \
            python2

      - name: Prepare sources
        run: |
          git config --global user.name "CI"
          git config --global user.email "CI@xyz.com"
          git config --global color.ui true

          mkdir ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          sudo ln -sf ~/bin/repo /usr/bin/repo

          cd ${GITHUB_WORKSPACE}/device/${{ github.event.inputs.vendor-name }}/${{ github.event.inputs.device-name }}
          repo init --depth=1 -u ${{ github.event.inputs.manifest-url }} -b ${{ github.event.inputs.manifest-branch }}
          repo sync -j$(nproc --all) --force-sync --no-clone-bundle --no-tags --optimized-fetch --prune

      - name: Build
        run: |
          cd ${GITHUB_WORKSPACE}/device/${{ github.event.inputs.vendor-name }}/${{ github.event.inputs.device-name }}
          source build/envsetup.sh

          export ALLOW_MISSING_DEPENDENCIES='true'

          rm -rf ${GITHUB_WORKSPACE}/out
          lunch ${{ github.event.inputs.product }}_${{ github.event.inputs.device-name }}-${{ github.event.inputs.build-type }} && make clean && mka adbd ${{ github.event.inputs.target }}
          
      - name: Upload to releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            out/target/product/${{ github.event.inputs.device-name }}/*.img
            out/target/product/${{ github.event.inputs.device-name }}/*.zip
            out/target/product/${{ github.event.inputs.device-name }}/*.tar
          name: Recovery for ${{ github.event.inputs.device }}
          tag_name: ${{ github.run_id }}
          body: |
            Build: ${{ github.event.inputs.target }}-${{ github.event.inputs.product }}
            Device: ${{ github.event.inputs.device }}
